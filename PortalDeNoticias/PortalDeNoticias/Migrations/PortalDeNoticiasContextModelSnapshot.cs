// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PortalDeNoticias.Data;

namespace PortalDeNoticias.Migrations
{
    [DbContext(typeof(PortalDeNoticiasContext))]
    partial class PortalDeNoticiasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PortalDeNoticias.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("PortalDeNoticias.Models.Noticia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AutorId")
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("Noticia");
                });

            modelBuilder.Entity("PortalDeNoticias.Models.Noticia", b =>
                {
                    b.HasOne("PortalDeNoticias.Models.Autor", "Autor")
                        .WithMany("Noticias")
                        .HasForeignKey("AutorId");
                });
#pragma warning restore 612, 618
        }
    }
}
